I have chosen a scheme that uses less memory than simply having new entries for each BatchID, but it will take more processing to get information into the data models (i.e more complex logic). Looking forward to discussions.
The database storage model can be found in the mdzip file (open with Nomagic)

Table TRACKING
	This table is the center-point of the database. When there is a change, or creation, of data associated with a ClinVarID then a BMK is created that can be used to find the data in the data tables of the database. A BMK can link to data in more than one Data Table. The BMK is specific/unique to the CLINVARID and UPDATEDATE.
	CLINVARID (ClinVarID for data)
	BMK
	UpdateDate
	BATCHID
	Active (Y/N Boolean used within database to indicate a Live data element - if N then the element should not be used)
	IsReferenceID  (Y/N Boolean used within database to indicate that the CLINVARID is a Reference ClinVarID)
		
::DATA tables::
Using fk_BMK with separate data tables gives us flexibility to add/remove or alter more easily the data we wish to keep track of and use.

Table Phenotypes
	fk_BMK (associates data with BMK in tracking for Reference CLINVARID that owns the evidence CLINVARID)
	PHENOTYPETEXT (a place to store information on phenotypes beyond basics covered in other columns- needs to be discussed) 
	INTERPRETATION (a place to put molecular effects interpretation information such as 'change in coding sequence')
	DISEASENAME (name of an associated disease if any)
	SIGNIFICANCE (interpretation of the significance of the variation, i.e. pathogenic, benign, unknown)
	STARNUM (measure of strength of evidence)
	Active
	IsReferenceID
	
Table Location
	fk_BMK 
	Location (text of location if needed for clarification)
	REFGENOME (name of reference Genome that the start/stop refer to)
	ACCESSION (NCBI refseek sequence that the start/stop refer to)
	CHROMSOME
	START (start of where variation begins)
	STOP (end of where variation begins - NOTE: in the case of an insertion or deletion or indel the START AND STOP do not change they are always relative to the Reference genome)

Table Evidence
	fk_BMK 
	EVI_CLINVARID (CLINVARID of the evidence, used to find evidences BMKs within TRACKING table)
		if evidence changes, use BMK within relevant tables as above but remember to have IsReferenceID set to false
	Active
		
Table CLINVARSETID
	fk_BMK
	CLINVARSETID (the reference CLINVARID and evidence IDs are all rolled into a SetID, to me the SETID Is redundant if you have a reference ID...but here it is anyway)
	Active
	
Table DateCreated
	fk_BMK
	DATECREATED
	Active
	IsReferenceID

Table TYPE
	fk_BMK
	TYPE (label for kind of variation from reference Single nucleotide polymorphism, indel, deletion, etc...)
	SEQCHANGE (text for change in sequence if needed for clarity)
	SEQ_NONVARIENT (the sequence as it is in the reference Genome)
	SEQ_VARIENT (the sequence as it has been changed)
	Active
	IsRefernceID

Table GENENAME
	fk_BMK
	HUGO (HUGO gene symbol)
	SYNONYMS (synonyms you'd like to use)
	CLINVARname (name from ClinVar, usually is HUGO gene symbol)
	Active
	IsReferenceID
	
::INCREASED FLEXIBILITY AND BACKWARD/FORWARD COMPATBILITY::
This way we shall be able to model the old data is it is and be flexible for changes <simply incorporate a new table! and map old table names for old data to new table namespace>
TABLE TableNameMap 
	TableName, Date added, MapName, DateMapped, MapNameRemapped (Y/N), TableMeaning <- a new row each time the TableName is remapped <--- also if MapName has been remapped -- i.e. new iteration we follow this; If MapNameRemapped is Y then we know we need to look at MapName in this table to learn where it has been mapped to
	??what do we do when a TableName is no longer used?? <-- Don't worry about it! the Object Model will decide which tables information is useful.
	TableName should be unique key?
	TableMeaning::is this worth keeping , what if it changes? it could be useful from a curation aspect but meaning should be defined based on how it is used in original database